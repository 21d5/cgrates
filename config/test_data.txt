# TEST DATA - NOT FOR PRODUCTION USAGE
#

[global]
datadb_type = test 				# The main database: <redis>.
datadb_host = test 				# Database host address.
datadb_port = test 				# Port to reach the database.
datadb_name = test 				# The name of the database to connect to.
datadb_user = test				# Username to use when connecting to database.
datadb_passwd = test				# Password to use when connecting to database.
stordb_type = test				# Log/stored database type to use: <same|postgres|mongo|redis>
stordb_host = test 				# The host to connect to. Values that start with / are for UNIX domain sockets.
stordb_port = test				# The port to reach the logdb.
stordb_name = test 				# The name of the log database to connect to.
stordb_user = test  	 			# Username to use when connecting to logdb.
stordb_passwd = test 	 			# Password to use when connecting to logdb.
dbdata_encoding = test				# The encoding used to store object data in strings: <msgpack|json>
rpc_encoding = test 				# RPC encoding used on APIs: <gob|json>.
default_reqtype = test				# Default request type to consider when missing from requests: <""|prepaid|postpaid|pseudoprepaid|rated>.
default_tor = test				# Default Type of Record to consider when missing from requests.
default_tenant = test				# Default Tenant to consider when missing from requests.
default_subject = test				# Default rating Subject to consider when missing from requests.
rounding_method = test				# Rounding method for floats/costs: <up|middle|down>
rounding_decimals = 99				# Number of decimals to round floats/costs at


[balancer]
enabled = true 				# Start Balancer service: <true|false>.
listen = test 			# Balancer listen interface: <disabled|x.y.z.y:1234>.

[rater]
enabled = true				# Enable Rater service: <true|false>.
balancer = test 				# Register to Balancer as worker: <enabled|disabled>.
listen = test 			# Rater's listening interface: <internal|x.y.z.y:1234>.

[scheduler]
enabled = true				# Starts Scheduler service: <true|false>.

[cdrs]
enabled = true				# Start the CDR Server service:  <true|false>.
listen=test				# CDRS's listening interface: <x.y.z.y:1234>.
extra_fields = test			# Extra fields to store in CDRs
mediator = test				# Address where to reach the Mediator. Empty for disabling mediation. <""|internal>
export_path = test			# Path where exported cdrs will be written
export_extra_fields = test		# Extra fields list to be exported

[mediator]
enabled = true				# Starts Mediator service: <true|false>.
listen=test				# Mediator's listening interface: <internal>.
rater = test			# Address where to reach the Rater: <internal|x.y.z.y:1234>
rater_reconnects = 99				# Number of reconnects to rater before giving up.
cdr_type = test		# CDR type <freeswitch_http_json|freeswitch_file_csv>.
accid_field = test				# Name of field identifying accounting id used during mediation. Use index number in case of .csv cdrs.
subject_fields = test			# Name of subject fields to be used during mediation. Use index numbers in case of .csv cdrs.
reqtype_fields = test				# Name of request type fields to be used during mediation. Use index number in case of .csv cdrs.
direction_fields = test			# Name of direction fields to be used during mediation. Use index numbers in case of .csv cdrs.
tenant_fields = test			# Name of tenant fields to be used during mediation. Use index numbers in case of .csv cdrs.
tor_fields = test				# Name of tor fields to be used during mediation. Use index numbers in case of .csv cdrs.
account_fields = test			# Name of account fields to be used during mediation. Use index numbers in case of .csv cdrs.
destination_fields = test		# Name of destination fields to be used during mediation. Use index numbers in case of .csv cdrs.
time_answer_fields = test		# Name of time_answer fields to be used during mediation. Use index numbers in case of .csv cdrs.
duration_fields = test			# Name of duration fields to be used during mediation. Use index numbers in case of .csv cdrs.
cdr_in_dir = test 	# Absolute path towards the directory where the CDRs are kept (file stored CDRs).
cdr_out_dir =	test	# Absolute path towards the directory where processed CDRs will be exported (file stored CDRs).

[session_manager]
enabled = true				# Starts SessionManager service: <true|false>.
switch_type = test			# Defines the type of switch behind: <freeswitch>.
rater = test			# Address where to reach the Rater.
rater_reconnects = 99				# Number of reconnects to rater before giving up.
debit_interval = 99				# Interval to perform debits on.

[freeswitch]
server = test			# Adress where to connect to FreeSWITCH socket.
passwd = test				# FreeSWITCH socket password.
reconnects = 99				# Number of attempts on connect failure.

[history_agent]
enabled = true			# Starts History as a client: <true|false>.
server = test			# Address where to reach the master history server: <internal|x.y.z.y:1234>

[history_server]
enabled = true			# Starts History service: <true|false>.
listen = test			# Listening addres for history server: <internal|x.y.z.y:1234>
path = test				# Location on disk where to store history files.

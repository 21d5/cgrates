# TEST DATA - NOT FOR PRODUCTION USAGE
#

[global]
ratingdb_type = test	 		# Rating subsystem database: <redis>.
ratingdb_host = test	 		# Rating subsystem database host address.
ratingdb_port = test			# Rating subsystem port to reach the database.
ratingdb_name = test			# Rating subsystem database name to connect to.
ratingdb_user =	test		 	# Rating subsystem username to use when connecting to database.
ratingdb_passwd = test			# Rating subsystem password to use when connecting to database.
accountdb_type = test	 		# Accounting subsystem database: <redis>.
accountdb_host = test 			# Accounting subsystem database host address.
accountdb_port = test 			# Accounting subsystem port to reach the database.
accountdb_name = test			# Accounting subsystem database name to connect to.
accountdb_user = test		 	# Accounting subsystem username to use when connecting to database.
accountdb_passwd = test			# Accounting subsystem password to use when connecting to database.
stordb_type = test			# Log/scategoryed database type to use: <same|postgres|mongo|redis>
stordb_host = test 			# The host to connect to. Values that start with / are for UNIX domain sockets.
stordb_port = test			# The port to reach the logdb.
stordb_name = test 			# The name of the log database to connect to.
stordb_user = test  	 		# Username to use when connecting to logdb.
stordb_passwd = test 	 		# Password to use when connecting to logdb.
stordb_max_open_conns = 99         # Maximum database connections opened
stordb_max_idle_conns = 99        # Maximum database connections idle
dbdata_encoding = test			# The encoding used to scategorye object data in strings: <msgpack|json>
rpc_json_listen = test 			# RPC JSON listening address
rpc_gob_listen = test 			# RPC GOB listening address
http_listen = test 			# HTTP listening address
default_reqtype = test			# Default request type to consider when missing from requests: <""|prepaid|postpaid|pseudoprepaid|rated>.
default_category = test			# Default Type of Record to consider when missing from requests.
default_tenant = test			# Default Tenant to consider when missing from requests.
default_subject = test			# Default rating Subject to consider when missing from requests.
rounding_decimals = 99			# Number of decimals to round floats/costs at
http_skip_tls_veify = true		# If enabled Http Client will accept any TLS certificate

[balancer]
enabled = true 				# Start Balancer service: <true|false>.

[rater]
enabled = true				# Enable Rater service: <true|false>.
balancer = test 			# Register to Balancer as worker: <enabled|disabled>.

[scheduler]
enabled = true				# Starts Scheduler service: <true|false>.

[cdrs]
enabled = true				# Start the CDR Server service:  <true|false>.
extra_fields = test			# Extra fields to scategorye in CDRs
mediator = test				# Address where to reach the Mediator. Empty for disabling mediation. <""|internal>
cdrstats = test				# Address where to reach the CDRStats server. Empty for disabling stats. <""|internal>
store_disable = true			# When true, CDRs will not longer be saved in stordb, useful for cdrstats only scenario

[cdre]
cdr_format = test					# Exported CDRs format <csv>
data_usage_multiply_factor = 99.0	# Multiply data usage before export (eg: convert from KBytes to Bytes)
cost_multiply_factor = 99.0			# Multiply cost before export (0.0 to disable), eg: add VAT
cost_rounding_decimals = 99			# Rounding decimals for Cost values. -1 to disable rounding
cost_shift_digits = 99 				# Shift digits in the cost on export (eg: convert from EUR to cents)
mask_destination_id = test			# Destination id containing called addresses to be masked on export
mask_length = 99					# Length of the destination suffix to be masked
export_dir = test					# Path where the exported CDRs will be placed
export_template = test				# List of fields in the exported CDRs

[cdrc]
enabled = true				# Enable CDR client functionality
cdrs = test					# Address where to reach CDR server
run_delay = 99				# Period to sleep between two runs, 0 to use automation via inotify
cdr_type = test				# CDR file format <csv>.
csv_separator =;			# Csv separator, one character only and should be next to equal sign
cdr_in_dir = test		 	# Absolute path towards the direccategoryy where the CDRs are kept (file scategoryed CDRs).
cdr_out_dir = test			# Absolute path towards the direccategoryy where processed CDRs will be moved after processing.	
cdr_source_id = test		# Tag identifying the source of the CDRs within CGRS database.
tor_field = test 			# TypeOfRecord field identifier. Use index number in case of .csv cdrs.
accid_field = test			# Accounting id field identifier. Use index number in case of .csv cdrs.
reqtype_field = test		# Request type field identifier. Use index number in case of .csv cdrs.
direction_field = test		# Direction field identifier. Use index numbers in case of .csv cdrs.
tenant_field = test			# Tenant field identifier. Use index numbers in case of .csv cdrs.
category_field = test		# Type of Record field identifier. Use index numbers in case of .csv cdrs.
account_field = test		# Account field identifier. Use index numbers in case of .csv cdrs.
subject_field = test		# Subject field identifier. Use index numbers in case of .csv CDRs.
destination_field = test	# Destination field identifier. Use index numbers in case of .csv cdrs.
setup_time_field = test		# Answer time field identifier. Use index numbers in case of .csv cdrs.
answer_time_field = test	# Answer time field identifier. Use index numbers in case of .csv cdrs.
usage_field = test			# Duration field identifier. Use index numbers in case of .csv cdrs.
extra_fields = test:test	# Field identifiers of the fields to add in extra fields section, special format in case of .csv "index1|field1,index2|field2"

[mediator]
enabled = true				# Starts Mediacategory service: <true|false>.
rater = test				# Address where to reach the Rater: <internal|x.y.z.y:1234>
reconnects = 99				# Number of reconnects to rater before giving up.
cdrstats = test             # Address where to reach the cdrstats service: <internal|x.y.z.y:1234>
store_disable = true		# When true, CDRs will not longer be saved in stordb, useful for cdrstats only scenario

[cdrstats]
enabled = true              		# Start the CDR stats service:  <true|false>.
queue_length = 99					# Number of items in the stats buffer
time_window = 99					# Will only keep the CDRs who's call setup time is not older than time.Now()-TimeWindow
metrics = test						# Stat metric ids to build
setup_interval =					# Filter on CDR SetupTime
tors = test							# Filter on CDR TOR fields
cdr_hosts= test						# Filter on CDR CdrHost fields
cdr_sources = test 					# Filter on CDR CdrSource fields
req_types = test					# Filter on CDR ReqType fields
directions = test					# Filter on CDR Direction fields
tenants = test 						# Filter on CDR Tenant fields
categories = test					# Filter on CDR	Category fields
accounts =	test					# Filter on CDR Account fields
subjects = test						# Filter on CDR Subject fields
destination_prefixes = test			# Filter on CDR Destination prefixes
usage_interval = 99					# Filter on CDR Usage 
mediation_run_ids = test			# Filter on CDR MediationRunId fields
rated_accounts = test				# Filter on CDR RatedAccount fields
rated_subjects = test				# Filter on CDR RatedSubject fields
cost_intervals = 99					# Filter on CDR Cost

[session_manager]
enabled = true				# Starts SessionManager service: <true|false>.
switch_type = test			# Defines the type of switch behind: <freeswitch>.
rater = test				# Address where to reach the Rater.
cdrs = test					# Address where to reach CDR Server, empty to disable CDR capturing <""|internal|127.0.0.1:2013>
reconnects = 99				# Number of reconnects to rater before giving up.
debit_interval = 99			# Interval to perform debits on.
min_call_duration = 98		# Only authorize calls with allowed duration bigger than this
max_call_duration = 99		# Maximum call duration a prepaid call can last

[freeswitch]
server = test					# Adress where to connect to FreeSWITCH socket.
passwd = test					# FreeSWITCH socket password.
reconnects = 99					# Number of attempts on connect failure.
min_dur_low_balance = 99      	# Threshold which will trigger low balance warnings
low_balance_ann_file =  test  	# File to be played when low balance is reached
empty_balance_context = test    # If defined, call will be transfered to this context on empty balance 
empty_balance_ann_file = test  	# File to be played before disconnecting prepaid calls (applies only if no context defined)
cdr_extra_fields = test			# Extra fields to store in CDRs in case of processing them

[opensips]
listen_udp = test 				# Address where to listen for event datagrams coming from OpenSIPS
mi_addr = test					# Adress where to reach OpenSIPS mi_datagram module
events_subscribe_interval = 99	# Automatic events subscription to OpenSIPS, 0 to disable it
cdrs = test						# Address where to reach CDR Server, empty to disable CDR processing <""|internal|127.0.0.1:2013>
reconnects = 99					# Number of attempts on connect failure.

[derived_charging]
run_ids = test 				# Identifiers of additional sessions control.
run_filters = 				# No filters applied
reqtype_fields = test		# Name of request type fields to be used during additional sessions control <""|*default|field_name>.
direction_fields = test		# Name of direction fields to be used during additional sessions control <""|*default|field_name>.
tenant_fields = test		# Name of tenant fields to be used during additional sessions control <""|*default|field_name>.
category_fields = test			# Name of category fields to be used during additional sessions control <""|*default|field_name>.
account_fields = test		# Name of account fields to be used during additional sessions control <""|*default|field_name>.
subject_fields = test		# Name of fields to be used during additional sessions control <""|*default|field_name>.
destination_fields = test	# Name of destination fields to be used during additional sessions control <""|*default|field_name>.
setup_time_fields = test	# Name of setup_time fields to be used during additional sessions control <""|*default|field_name>.
answer_time_fields = test	# Name of answer_time fields to be used during additional sessions control <""|*default|field_name>.
usage_fields = test			# Name of duration fields to be used during additional sessions control <""|*default|field_name>.
combined_chargers = true	# Combine accounts specific derived_chargers with server configured ones <true|false>.

[history_server]
enabled = true				# Starts Hiscategoryy service: <true|false>.
history_dir = test			# Location on disk where to scategorye hiscategoryy files.
save_interval = 99			# Timeout duration between saves

[history_agent]
enabled = true				# Starts Hiscategoryy as a client: <true|false>.
server = test				# Address where to reach the master hiscategoryy server: <internal|x.y.z.y:1234>

[mailer]
server = test				# The server to use when sending emails out
auth_user = test			# Authenticate to email server using this user
auth_passwd = test			# Authenticate to email server with this password
from_address = test			# From address used when sending emails out

# TEST DATA - NOT FOR PRODUCTION USAGE
#

[global]
ratingdb_type = test	 			# Rating subsystem database: <redis>.
ratingdb_host = test	 			# Rating subsystem database host address.
ratingdb_port = test				# Rating subsystem port to reach the database.
ratingdb_name = test				# Rating subsystem database name to connect to.
ratingdb_user =	test		 		# Rating subsystem username to use when connecting to database.
ratingdb_passwd = test				# Rating subsystem password to use when connecting to database.
accountdb_type = test	 			# Accounting subsystem database: <redis>.
accountdb_host = test 				# Accounting subsystem database host address.
accountdb_port = test 				# Accounting subsystem port to reach the database.
accountdb_name = test				# Accounting subsystem database name to connect to.
accountdb_user = test		 		# Accounting subsystem username to use when connecting to database.
accountdb_passwd = test				# Accounting subsystem password to use when connecting to database.
stordb_type = test				# Log/stored database type to use: <same|postgres|mongo|redis>
stordb_host = test 				# The host to connect to. Values that start with / are for UNIX domain sockets.
stordb_port = test				# The port to reach the logdb.
stordb_name = test 				# The name of the log database to connect to.
stordb_user = test  	 			# Username to use when connecting to logdb.
stordb_passwd = test 	 			# Password to use when connecting to logdb.
dbdata_encoding = test				# The encoding used to store object data in strings: <msgpack|json>
rpc_json_listen = test 				# RPC JSON listening address
rpc_gob_listen = test 				# RPC GOB listening address
http_listen = test 				# HTTP listening address
default_reqtype = test				# Default request type to consider when missing from requests: <""|prepaid|postpaid|pseudoprepaid|rated>.
default_tor = test				# Default Type of Record to consider when missing from requests.
default_tenant = test				# Default Tenant to consider when missing from requests.
default_subject = test				# Default rating Subject to consider when missing from requests.
rounding_method = test				# Rounding method for floats/costs: <up|middle|down>
rounding_decimals = 99				# Number of decimals to round floats/costs at


[balancer]
enabled = true 				# Start Balancer service: <true|false>.

[rater]
enabled = true				# Enable Rater service: <true|false>.
balancer = test 				# Register to Balancer as worker: <enabled|disabled>.

[scheduler]
enabled = true				# Starts Scheduler service: <true|false>.

[cdrs]
enabled = true				# Start the CDR Server service:  <true|false>.
extra_fields = test			# Extra fields to store in CDRs
mediator = test				# Address where to reach the Mediator. Empty for disabling mediation. <""|internal>

[cdre]
cdr_format = test				# Exported CDRs format <csv>
extra_fields = test 				# List of extra fields to be exported out in CDRs
export_dir = test				# Path where the exported CDRs will be placed

[cdrc]
enabled = true				# Enable CDR client functionality
cdrs = test				# Address where to reach CDR server
cdrs_method = test			# Mechanism to use when posting CDRs on server  <http_cgr>
run_delay = 99				# Period to sleep between two runs, 0 to use automation via inotify
cdr_type = test				# CDR file format <csv>.
cdr_in_dir = test		 	# Absolute path towards the directory where the CDRs are kept (file stored CDRs).
cdr_out_dir = test			# Absolute path towards the directory where processed CDRs will be moved after processing.	
cdr_source_id = test			# Tag identifying the source of the CDRs within CGRS database.
accid_field = test			# Accounting id field identifier. Use index number in case of .csv cdrs.
reqtype_field = test			# Request type field identifier. Use index number in case of .csv cdrs.
direction_field = test			# Direction field identifier. Use index numbers in case of .csv cdrs.
tenant_field = test			# Tenant field identifier. Use index numbers in case of .csv cdrs.
tor_field = test			# Type of Record field identifier. Use index numbers in case of .csv cdrs.
account_field = test			# Account field identifier. Use index numbers in case of .csv cdrs.
subject_field = test			# Subject field identifier. Use index numbers in case of .csv CDRs.
destination_field = test		# Destination field identifier. Use index numbers in case of .csv cdrs.
answer_time_field = test		# Answer time field identifier. Use index numbers in case of .csv cdrs.
duration_field = test			# Duration field identifier. Use index numbers in case of .csv cdrs.
extra_fields = test			# Field identifiers of the fields to add in extra fields section, special format in case of .csv "index1:field1,index2:field2"

[mediator]
enabled = true				# Starts Mediator service: <true|false>.
rater = test			# Address where to reach the Rater: <internal|x.y.z.y:1234>
rater_reconnects = 99				# Number of reconnects to rater before giving up.
run_ids = test				# Identifiers for each mediation run on CDRs
subject_fields = test			# Name of subject fields to be used during mediation. Use index numbers in case of .csv cdrs.
reqtype_fields = test				# Name of request type fields to be used during mediation. Use index number in case of .csv cdrs.
direction_fields = test			# Name of direction fields to be used during mediation. Use index numbers in case of .csv cdrs.
tenant_fields = test			# Name of tenant fields to be used during mediation. Use index numbers in case of .csv cdrs.
tor_fields = test				# Name of tor fields to be used during mediation. Use index numbers in case of .csv cdrs.
account_fields = test			# Name of account fields to be used during mediation. Use index numbers in case of .csv cdrs.
destination_fields = test		# Name of destination fields to be used during mediation. Use index numbers in case of .csv cdrs.
answer_time_fields = test		# Name of time_answer fields to be used during mediation. Use index numbers in case of .csv cdrs.
duration_fields = test			# Name of duration fields to be used during mediation. Use index numbers in case of .csv cdrs.

[session_manager]
enabled = true				# Starts SessionManager service: <true|false>.
switch_type = test			# Defines the type of switch behind: <freeswitch>.
rater = test			# Address where to reach the Rater.
rater_reconnects = 99			# Number of reconnects to rater before giving up.
debit_interval = 99			# Interval to perform debits on.
max_call_duration = 99			# Maximum call duration a prepaid call can last

[freeswitch]
server = test			# Adress where to connect to FreeSWITCH socket.
passwd = test				# FreeSWITCH socket password.
reconnects = 99				# Number of attempts on connect failure.

[history_server]
enabled = true			# Starts History service: <true|false>.
history_dir = test				# Location on disk where to store history files.
save_interval = 99	      # Timeout duration between saves

[history_agent]
enabled = true			# Starts History as a client: <true|false>.
server = test			# Address where to reach the master history server: <internal|x.y.z.y:1234>

